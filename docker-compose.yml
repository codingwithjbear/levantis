version: "3.8"
services:
  db:
    image: postgres:16
    environment:
      POSTGRES_DB: levantis
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - db_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres} -d ${POSTGRES_DB:-levantis} || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  api:
    build:
      context: ./apps/levantis-api
    env_file:
      - ./apps/levantis-api/.env
    environment:
      # Override hosts to point to compose service names
      POSTGRES_HOST: db
      REDIS_HOST: redis
      # optional overrides
      DJANGO_DEBUG: "1"
      DJANGO_ALLOWED_HOSTS: "localhost,127.0.0.1"
    volumes:
      - ./apps/levantis-api:/code
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    ports:
      - "8000:8000"
    command: sh -c "python manage.py migrate && python manage.py runserver 0.0.0.0:8000"
    restart: unless-stopped

  web:
    build:
      context: ./apps/levantis-web
    environment:
      # point to nginx inside the compose network
      - NEXT_PUBLIC_API_BASE=http://nginx/api
    volumes:
      - ./apps/levantis-web:/app
      - /app/node_modules
    depends_on:
      - api
    ports:
      - "3000:3000"
    command: sh -c "npm run dev"
    restart: unless-stopped

  nginx:
    image: nginx:alpine
    volumes:
      - ./infra/nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      - api
      - web
    ports:
      - "8080:80"
    restart: unless-stopped

volumes:
  db_data:
